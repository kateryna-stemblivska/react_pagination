{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","currentLinks","Math","ceil","isFirstLink","isLastLink","at","className","cn","disabled","href","onClick","map","link","isActive","active","items","totalItems","length","App","useState","visiblePages","setVisiblePages","selectedPage","setSelectedPage","startInd","endInd","min","value","id","onChange","event","target","htmlFor","page","slice","item","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCKIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAGMC,EAAeX,EAAW,EADZY,KAAKC,KAAKN,EAAQC,IAEhCM,EAAcH,EAAa,KAAOF,EAClCM,EAAaJ,EAAaK,IAAI,KAAOP,EAc3C,OACE,qBAAIQ,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAC7BC,SAAUL,IADZ,SAIE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeN,EACfO,QAvBqB,WACvBZ,IAAgBE,EAAa,IAC/BD,EAAaD,EAAc,IAgBzB,oBAWDE,EAAaW,KAAI,SAAAC,GAChB,IAAMC,EAAWD,IAASd,EAE1B,OACE,oBAEEQ,UAAWC,IAAG,YAAa,CACzBO,OAAQD,IAHZ,SAME,mBACE,UAAQ,WACRP,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMX,EAAaa,IAJ9B,SAMGA,KAXEA,MAgBX,oBAAIN,UAAWC,IAAG,YAAa,CAC7BC,SAAUJ,IADZ,SAIE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QArDqB,WACvBZ,IAAgBE,EAAaK,IAAI,IACnCN,EAAaD,EAAc,IA8CzB,wBCxEFiB,EAAQ1B,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,MACduB,EAAaD,EAAME,OAEZC,EAAgB,WAC3B,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAwCF,mBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAEMC,EAAWF,EAAeF,EAAeA,EACzCK,EAASxB,KAAKyB,IAAIF,EAAWJ,EAAcJ,GAajD,OACE,sBAAKV,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWgB,EADX,mBACkCE,EAAW,EAD7C,cACoDC,EADpD,eACiET,EADjE,OAIA,sBAAKV,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACEqB,MAAOP,EACP,UAAQ,kBACRQ,GAAG,kBACHtB,UAAU,eACVuB,SA1BkB,SAACC,GAC3BT,GAAiBS,EAAMC,OAAOJ,OAC9BJ,EAAgB,IAmBV,UAOE,wBAAQI,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkB1B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOoB,EACPnB,QAASuB,EACTtB,YAAawB,EACbvB,aAvCmB,SAACkC,GACpBA,IAASX,GACXC,EAAgBU,MAwChB,6BACGlB,EACEmB,MAAMV,EAAUC,GAChBd,KAAI,SAAAwB,GAAI,OACP,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YChErBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d53210fb.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const amountLinks = Math.ceil(total / perPage);\n  const currentLinks = getNumbers(1, amountLinks);\n  const isFirstLink = currentLinks[0] === currentPage;\n  const isLastLink = currentLinks.at(-1) === currentPage;\n\n  const handlePrevPageChange = () => {\n    if (currentPage !== currentLinks[0]) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleNextPageChange = () => {\n    if (currentPage !== currentLinks.at(-1)) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', {\n        disabled: isFirstLink,\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstLink}\n          onClick={handlePrevPageChange}\n        >\n          «\n        </a>\n      </li>\n\n      {currentLinks.map(link => {\n        const isActive = link === currentPage;\n\n        return (\n          <li\n            key={link}\n            className={cn('page-item', {\n              active: isActive,\n            })}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${link}`}\n              onClick={() => onPageChange(link)}\n            >\n              {link}\n            </a>\n          </li>\n        );\n      })}\n      <li className={cn('page-item', {\n        disabled: isLastLink,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastLink}\n          onClick={handleNextPageChange}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\nconst totalItems = items.length;\n\nexport const App: React.FC = () => {\n  const [visiblePages, setVisiblePages] = useState(5);\n  const [selectedPage, setSelectedPage] = useState(1);\n\n  const startInd = selectedPage * visiblePages - visiblePages;\n  const endInd = Math.min(startInd + visiblePages, totalItems);\n\n  const handlerSelectedPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setVisiblePages(+event.target.value);\n    setSelectedPage(1);\n  };\n\n  const handlePageChange = (page: number) => {\n    if (page !== selectedPage) {\n      setSelectedPage(page);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${selectedPage} (items ${startInd + 1} - ${endInd} of ${totalItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            value={visiblePages}\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handlerSelectedPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItems}\n        perPage={visiblePages}\n        currentPage={selectedPage}\n        onPageChange={handlePageChange}\n      />\n\n      <ul>\n        {items\n          .slice(startInd, endInd)\n          .map(item => (\n            <li key={item} data-cy=\"item\">{item}</li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}